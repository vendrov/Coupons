package coupons.hibernate;

import java.awt.image.BufferedImage;
import java.util.Date;
import java.util.Iterator;

import javax.persistence.Entity;
import javax.persistence.Id;

import org.hibernate.Session;

import coupons_site.ICouponsDAO;

@Entity
public class Coupon implements ICouponsDAO {
	
	@Id
	private int id;
	private String name;
	private Date uploadTime;
	private Date expiredTime;
	private int businessId;
	private String image;
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Date getUploadTime() {
		return uploadTime;
	}
	public void setUploadTime(Date uploadTime) {
		this.uploadTime = uploadTime;
	}
	public Date getExpiredTime() {
		return expiredTime;
	}
	public void setExpiredTime(Date expiredTime) {
		this.expiredTime = expiredTime;
	}
	public int getBusinessId() {
		return businessId;
	}
	public void setBusinessId(int businessId) {
		this.businessId = businessId;
	}
	public String getImage() {
		return image;
	}
	public void setImage(String image) {
		this.image = image;
	}
	@Override
	public Coupon getCoupon(int id, Session session) {
		session.beginTransaction();
		Coupon selectedCoupon = (Coupon) session.get(Coupon.class, id);
		session.getTransaction().commit();
		session.close();
		
		return selectedCoupon;
	}
	@Override
	public boolean updateCoupon(Coupon sourceCoupon, Session session) {
		session.beginTransaction();
		Coupon targetCoupon = (Coupon) session.get(Coupon.class, sourceCoupon.getId());
		targetCoupon = sourceCoupon;
		session.save(targetCoupon);
		session.getTransaction().commit();
		session.close();
		
		return true;
	}
	@Override
	public Iterator<Coupon> getCoupons(int from, int numberOfCoupons,
			Session session) {
		
	}
	@Override
	public boolean deleteCoupon(int id, Session session) {
		session.beginTransaction();
		Coupon targetCoupon = (Coupon) session.get(Coupon.class, id);
		session.delete(targetCoupon);
		session.getTransaction().commit();
		session.close();
		
		return true;
	}
	@Override
	public boolean addCoupon(Coupon newCoupon, Session session) {
		session.beginTransaction();
		session.save(newCoupon);
		session.getTransaction().commit();
		session.close();
		
		return true;
	}
}
